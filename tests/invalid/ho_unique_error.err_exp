ho_unique_error.m:011: In `call_ho'(di, uo):
ho_unique_error.m:011:   error: [38;5;203m`multi'[39;49m is not a valid determinism for a
ho_unique_error.m:011:   predicate that has I/O state arguments. The valid
ho_unique_error.m:011:   determinisms for such predicates are [38;5;40m`det', `cc_multi'[39;49m
ho_unique_error.m:011:   [38;5;40mand `erroneous',[39;49m since the I/O state can be neither
ho_unique_error.m:011:   duplicated nor destroyed.
ho_unique_error.m:016: In clause for `call_ho(di, uo)':
ho_unique_error.m:016:   in argument 3 (i.e. argument 2 of the called
ho_unique_error.m:016:   predicate) of higher-order predicate call:
ho_unique_error.m:016:   mode error: variable `STATE_VARIABLE_IO_0' has
ho_unique_error.m:016:   instantiatedness `mostly_unique',
ho_unique_error.m:016:   expected instantiatedness was `unique'.
ho_unique_error.m:016:   This kind of uniqueness mismatch is usually caused by
ho_unique_error.m:016:   doing input/output or some other kind of destructive
ho_unique_error.m:016:   update in a context where it can be backtracked over,
ho_unique_error.m:016:   such as the condition of an if-then-else.
