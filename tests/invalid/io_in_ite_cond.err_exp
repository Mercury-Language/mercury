io_in_ite_cond.m:013: In `foo'(di, uo):
io_in_ite_cond.m:013:   error: [38;5;203m`semidet'[39;49m is not a valid determinism for a
io_in_ite_cond.m:013:   predicate that has I/O state arguments. The valid
io_in_ite_cond.m:013:   determinisms for such predicates are [38;5;40m`det',[39;49m [38;5;40m`cc_multi'[39;49m
io_in_ite_cond.m:013:   and [38;5;40m`erroneous',[39;49m since the I/O state can be neither
io_in_ite_cond.m:013:   duplicated nor destroyed.
io_in_ite_cond.m:020: In clause for `main(di, uo)':
io_in_ite_cond.m:020:   in argument 1 of call to predicate
io_in_ite_cond.m:020:   `io_in_ite_cond.foo'/2:
io_in_ite_cond.m:020:   mode error: [38;5;87mvariable `STATE_VARIABLE_IO_0'[39;49m has
io_in_ite_cond.m:020:   instantiatedness [38;5;203m`mostly_unique',[39;49m
io_in_ite_cond.m:020:   expected instantiatedness was [38;5;40m`unique'.[39;49m
io_in_ite_cond.m:020:   [38;5;226mThis kind of uniqueness mismatch is usually caused by[39;49m
io_in_ite_cond.m:020:   [38;5;226mdoing input/output or some other kind of destructive[39;49m
io_in_ite_cond.m:020:   [38;5;226mupdate in a context where it can be backtracked over,[39;49m
io_in_ite_cond.m:020:   [38;5;226msuch as the condition of an if-then-else.[39;49m
