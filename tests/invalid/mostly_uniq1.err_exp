mostly_uniq1.m:009: In `my_main'(di, uo):
mostly_uniq1.m:009:   error: invalid determinism for a predicate that has I/O
mostly_uniq1.m:009:   state arguments. The valid determinisms are `det',
mostly_uniq1.m:009:   `cc_multi' and `erroneous', since the I/O state can be
mostly_uniq1.m:009:   neither duplicated nor destroyed.
mostly_uniq1.m:023: In clause for `my_main(di, uo)':
mostly_uniq1.m:023:   in argument 2 of call to predicate `io.write_int'/3:
mostly_uniq1.m:023:   mode error: variable `STATE_VARIABLE_IO_0' has
mostly_uniq1.m:023:   instantiatedness `mostly_unique',
mostly_uniq1.m:023:   expected instantiatedness was `unique'.
mostly_uniq1.m:023:   This kind of uniqueness mismatch is usually caused by
mostly_uniq1.m:023:   doing input/output or some other kind of destructive
mostly_uniq1.m:023:   update in a context where it can be backtracked over,
mostly_uniq1.m:023:   such as the condition of an if-then-else.
