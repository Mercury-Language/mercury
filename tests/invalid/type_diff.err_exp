type_diff.m:037: In clause for predicate `p1'/1:
type_diff.m:037:   in argument 1 of call to predicate `type_diff.q1'/1:
type_diff.m:037:   type error: variable `A' has type
type_diff.m:037:     type_diff.tx(string);
type_diff.m:037:   expected type was
type_diff.m:037:     type_diff.tx(T, U).
type_diff.m:037:   Arity mismatch for type constructor `tx': expected two
type_diff.m:037:   arguments, got one.
type_diff.m:038: In clause for predicate `p1'/1:
type_diff.m:038:   in argument 1 of call to predicate `type_diff.q1_list'/1:
type_diff.m:038:   type error: argument has type
type_diff.m:038:     list.list(type_diff.tx(string));
type_diff.m:038:   expected type was
type_diff.m:038:     list.list(type_diff.tx(T, U)).
type_diff.m:038:   In the first argument of type constructor `list':
type_diff.m:038:     arity mismatch for type constructor `tx': expected two
type_diff.m:038:     arguments, got one.
type_diff.m:039: In clause for predicate `p1'/1:
type_diff.m:039:   in argument 1 of call to predicate
type_diff.m:039:   `type_diff.q1_list_list'/1:
type_diff.m:039:   type error: argument has type
type_diff.m:039:     list.list(list.list(type_diff.tx(string)));
type_diff.m:039:   expected type was
type_diff.m:039:     list.list(list.list(type_diff.tx(T, U))).
type_diff.m:039:   In the first argument of type constructor `list':
type_diff.m:039:   in the first argument of type constructor `list':
type_diff.m:039:     arity mismatch for type constructor `tx': expected two
type_diff.m:039:     arguments, got one.
type_diff.m:071: In clause for predicate `p2'/4:
type_diff.m:071:   in argument 1 (i.e. the predicate term) of higher-order
type_diff.m:071:   predicate call:
type_diff.m:071:   type error: variable `Pred' has type
type_diff.m:071:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:071:   expected type was
type_diff.m:071:     pred(V_1, V_2, V_3).
type_diff.m:071:   Purity mismatch: expected a pure predicate, got an impure
type_diff.m:071:   predicate.
type_diff.m:073: In clause for predicate `p2'/4:
type_diff.m:073:   in argument 1 (i.e. the predicate term) of impure
type_diff.m:073:   higher-order predicate call:
type_diff.m:073:   type error: variable `Pred' has type
type_diff.m:073:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:073:   expected type was
type_diff.m:073:     impure pred(V_4, V_5).
type_diff.m:073:   Arity mismatch for the predicate: expected two arguments,
type_diff.m:073:   got three.
type_diff.m:074: In clause for predicate `p2'/4:
type_diff.m:074:   in argument 1 (i.e. the predicate term) of impure
type_diff.m:074:   higher-order predicate call:
type_diff.m:074:   type error: variable `Pred' has type
type_diff.m:074:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:074:   expected type was
type_diff.m:074:     impure pred(V_6, V_7, V_8, V_9).
type_diff.m:074:   Arity mismatch for the predicate: expected four arguments,
type_diff.m:074:   got three.
type_diff.m:075: In clause for predicate `p2'/4:
type_diff.m:075:   in unification of argument
type_diff.m:075:   and term `Pred(C, D)':
type_diff.m:075:   type error in argument of higher-order term (with arity 2).
type_diff.m:075:   Functor (Pred) has type
type_diff.m:075:     impure pred(int :: in, int :: in, int :: out) is det,
type_diff.m:075:   expected type was
type_diff.m:075:     func(V_10, V_11) = int.
type_diff.m:077: In clause for predicate `p2'/4:
type_diff.m:077:   in argument 1 of call to predicate
type_diff.m:077:   `type_diff.expect_pred_2_det'/3:
type_diff.m:077:   type error: variable `Pred' has type
type_diff.m:077:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:077:   expected type was
type_diff.m:077:     pred(int, int).
type_diff.m:077:   Purity mismatch: expected a pure predicate, got an impure
type_diff.m:077:   predicate.
type_diff.m:077:   Arity mismatch for the predicate: expected two arguments,
type_diff.m:077:   got three.
type_diff.m:078: In clause for predicate `p2'/4:
type_diff.m:078:   in argument 1 of call to predicate
type_diff.m:078:   `type_diff.expect_pred_3_semidet'/3:
type_diff.m:078:   type error: variable `Pred' has type
type_diff.m:078:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:078:   expected type was
type_diff.m:078:     pred(int, int, int).
type_diff.m:078:   Purity mismatch: expected a pure predicate, got an impure
type_diff.m:078:   predicate.
type_diff.m:079: In clause for predicate `p2'/4:
type_diff.m:079:   in argument 1 of call to predicate
type_diff.m:079:   `type_diff.expect_func_2'/3:
type_diff.m:079:   type error: variable `Pred' has type
type_diff.m:079:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:079:   expected type was
type_diff.m:079:     func(int, int) = int.
type_diff.m:079:   Predicate vs function mismatch: expected a function, got a
type_diff.m:079:   predicate.
type_diff.m:079:   Purity mismatch: expected a pure function, got an impure
type_diff.m:079:   predicate.
type_diff.m:080: In clause for predicate `p2'/4:
type_diff.m:080:   in argument 1 of call to predicate
type_diff.m:080:   `type_diff.expect_func_3'/3:
type_diff.m:080:   type error: variable `Pred' has type
type_diff.m:080:     impure pred(int :: in, int :: in, int :: out) is det;
type_diff.m:080:   expected type was
type_diff.m:080:     func(int, int, int) = int.
type_diff.m:080:   Predicate vs function mismatch: expected a function, got a
type_diff.m:080:   predicate.
type_diff.m:080:   Purity mismatch: expected a pure function, got an impure
type_diff.m:080:   predicate.
type_diff.m:080:   Arity mismatch for the predicate: expected four arguments,
type_diff.m:080:   got three.
type_diff.m:086: In clause for predicate `p2'/4:
type_diff.m:086:   in unification of variable `B'
type_diff.m:086:   and term `Func(A)':
type_diff.m:086:   type error in arguments of higher-order term (with arity 1).
type_diff.m:086:   Functor (Func) has type
type_diff.m:086:     func(int :: in, int :: in) = (int :: out) is det,
type_diff.m:086:   expected type was
type_diff.m:086:     func(V_13) = int.
type_diff.m:086:   Argument 1 (A) has type
type_diff.m:086:     int,
type_diff.m:086:   expected type was
type_diff.m:086:     V_13.
type_diff.m:087: In clause for predicate `p2'/4:
type_diff.m:087:   in unification of variable `D'
type_diff.m:087:   and term `Func(A, B, C)':
type_diff.m:087:   type error in arguments of higher-order term (with arity 3).
type_diff.m:087:   Functor (Func) has type
type_diff.m:087:     func(int :: in, int :: in) = (int :: out) is det,
type_diff.m:087:   expected type was
type_diff.m:087:     func(V_13, V_14, V_15) = V_16.
type_diff.m:087:   Argument 1 (A) has type
type_diff.m:087:     int,
type_diff.m:087:   expected type was
type_diff.m:087:     V_13.
type_diff.m:087:   Argument 2 (B) has type
type_diff.m:087:     int,
type_diff.m:087:   expected type was
type_diff.m:087:     V_14.
type_diff.m:087:   Argument 3 (C) has type
type_diff.m:087:     int,
type_diff.m:087:   expected type was
type_diff.m:087:     V_15.
type_diff.m:088: In clause for predicate `p2'/4:
type_diff.m:088:   in argument 1 (i.e. the predicate term) of impure
type_diff.m:088:   higher-order predicate call:
type_diff.m:088:   type error: variable `Func' has type
type_diff.m:088:     func(int :: in, int :: in) = (int :: out) is det;
type_diff.m:088:   expected type was
type_diff.m:088:     impure pred(V_13, V_14, V_15).
type_diff.m:088:   Predicate vs function mismatch: expected a predicate, got a
type_diff.m:088:   function.
type_diff.m:088:   Purity mismatch: expected an impure predicate, got a pure
type_diff.m:088:   function.
type_diff.m:090: In clause for predicate `p2'/4:
type_diff.m:090:   in argument 1 of call to predicate
type_diff.m:090:   `type_diff.expect_pred_2_det'/3:
type_diff.m:090:   type error: variable `Func' has type
type_diff.m:090:     func(int :: in, int :: in) = (int :: out) is det;
type_diff.m:090:   expected type was
type_diff.m:090:     pred(int, int).
type_diff.m:090:   Predicate vs function mismatch: expected a predicate, got a
type_diff.m:090:   function.
type_diff.m:090:   Arity mismatch for the function: expected two arguments, got
type_diff.m:090:   three.
type_diff.m:091: In clause for predicate `p2'/4:
type_diff.m:091:   in argument 1 of call to predicate
type_diff.m:091:   `type_diff.expect_pred_3_semidet'/3:
type_diff.m:091:   type error: variable `Func' has type
type_diff.m:091:     func(int :: in, int :: in) = (int :: out) is det;
type_diff.m:091:   expected type was
type_diff.m:091:     pred(int, int, int).
type_diff.m:091:   Predicate vs function mismatch: expected a predicate, got a
type_diff.m:091:   function.
type_diff.m:093: In clause for predicate `p2'/4:
type_diff.m:093:   in argument 1 of call to predicate
type_diff.m:093:   `type_diff.expect_func_3'/3:
type_diff.m:093:   type error: variable `Func' has type
type_diff.m:093:     func(int :: in, int :: in) = (int :: out) is det;
type_diff.m:093:   expected type was
type_diff.m:093:     func(int, int, int) = int.
type_diff.m:093:   Arity mismatch for the function: expected four arguments,
type_diff.m:093:   got three.
For more information, recompile with `-E'.
