TESTING TERMS WITH OPERATORS

var("X") + int(3) * var("X^2") ; (type)
test passed

{ type }
test passed

{ '?-' }
test passed

'?-'
test passed

{ blah }
test passed

blah ; (type), (type) * blah ; (type)
test passed

((blah ; blah), blah) * blah ; blah
test passed

(type) * blah ; (type)
test passed

TESTING DISCRIMINATED UNIONS

one
test passed

two
test passed

three
test passed

apple([9, 5, 1])
test passed

banana([three, one, two])
test passed

zop(3.3, 2.03)
test passed

zip(3, 2)
test passed

zap(3, -2.111)
test passed

wombat
test passed

foo
test passed

TESTING POLYMORPHISM

poly_one([2399.3])
test passed

poly_two(3)
test passed

poly_three(3.33, 4, poly_one(9.11))
test passed

TESTING BUILTINS


test passed

Hello, world

test passed

Foo%sFoo
test passed

"
test passed

a
test passed

&
test passed

.
test passed

%
test passed

 
test passed

	
test passed



test passed

\
test passed

*
test passed

/
test passed

3.14159
test passed

1.128324983e-21
test passed

2.23954899e+23
test passed

-65
test passed

4
test passed

651
test passed

-128
test passed

127
test passed

255
test passed

-32768
test passed

32767
test passed

65535
test passed

-2147483648
test passed

2147483647
test passed

4294967295
test passed

the next test is expected to fail:

'<<predicate>>'
test failed with this error:
orig '<<predicate>>', readback error
<predicate `io.read'/4: the term read did not have the right type>

TESTING OTHER TYPES

var(1)
test passed

var_supply(0)
test passed

var_supply(1)
test passed

empty
test passed

qwerty(4)
test passed

array([1, 2, 3, 4])
test passed
